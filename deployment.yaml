apiVersion: apps/v1
kind: Deployment
metadata:
  name: tp-foyer-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tp-foyer
  template:
    metadata:
      labels:
        app: tp-foyer
    spec:
      containers:
        - name: tp-foyer-container
          image: arij01/tp-foyer:1.0.2  # Backend Docker image
          ports:
            - containerPort: 8089  # Ensure this matches your backend's exposed port
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://mysql-service:3306/db?createDatabaseIfNotExist=true
            - name: SPRING_DATASOURCE_USERNAME
              value: root
            - name: SPRING_DATASOURCE_PASSWORD
              value: ""  # Use a Kubernetes Secret for production
---
apiVersion: v1
kind: Service
metadata:
  name: tp-foyer-service
spec:
  type: NodePort # External access for backend
  selector:
    app: tp-foyer
  ports:
    - protocol: TCP
      port: 8089               # Service port
      targetPort: 8089         # Backend container port
      nodePort: 30466      # Optional: specify a fixed NodePort if needed

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql-container
          image: mysql:5.7
          env:
            - name: MYSQL_ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: MYSQL_DATABASE
              value: db
          ports:
            - containerPort: 3306

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  type: NodePort
  ports:
    - port: 3306
  selector:
    app: mysql

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: angular-frontend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: angular-frontend
  template:
    metadata:
      labels:
        app: angular-frontend
    spec:
      containers:
        - name: angular-frontend
          image: arij01/frontend
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: angular-frontend-service
spec:
  selector:
    app: angular-frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30080
  type: NodePort

